---
- name: Check for required vars
  fail:
    msg: "Please specify a value for {{ item }}"
  when: item not in vars
  with_items: "{{ required_vars }}"

- import_tasks: uninstall.yml
  when: osce_uninstall | bool

- debug:
    msg: "Deploying {{ osce_appname}} from {{ osce_git_repo }} ref {{ osce_git_ref }}"

- name: Copy application template
  template:
    src: console-extensions-template.yml.j2
    dest: "{{ osce_template_path }}"
  register: template

- name: Create template
  command: "oc apply -f {{ osce_template_path }} -n {{ osce_namespace }}"
  when: template|changed

- name: Determine if template has changed
  debug:
    msg: "The file {{ osce_template_path }} has changed, console-extensions will be updated"
  when: template|changed

- name: Apply template
  shell: "oc process -n {{ osce_namespace }} {{ osce_appname }} | oc apply -n {{ osce_namespace }} -f -"
  changed_when: false
  when: template|changed

- name: Fetch latest git online-console-extensions
  git:
    repo: "{{ osce_git_repo }}"
    version: "{{ osce_git_ref }}"
    accept_hostkey: true
    clone: no
  register: git_sha1_results
  # Git may not be installed on remote hosts.
  delegate_to: localhost

- debug:
    msg: "Checking that latest build matches git ref {{ git_sha1_results.after }}"

- name: Start build if required
  oc_start_build_check:
    namespace: "{{ osce_namespace }}"
    buildconfig: "{{ osce_appname }}"
    git_ref: "{{ git_sha1_results.after }}"
  register: start_build_out

- name: Create edge route for console-extensions url
  oc_route:
    name: "{{ osce_appname }}"
    namespace: "{{ osce_namespace }}"
    service_name: "{{ osce_appname }}"
    tls_termination: edge
    port: 8080
    host: "{{ osce_url }}"

- name: Check deployment status
  include_role:
    name: roles/oso_deployment_status
  vars:
    osds_dc_name: "{{ osce_appname }}"
    osds_namespace: "{{ osce_namespace }}"

